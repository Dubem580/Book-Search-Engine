{"ast":null,"code":"import _regeneratorRuntime from\"/Users/dubem/Desktop/Book-Search-Engine/Develop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/dubem/Desktop/Book-Search-Engine/Develop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/dubem/Desktop/Book-Search-Engine/Develop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Jumbotron,Container,CardColumns,Card,Button}from'react-bootstrap';// import { getMe, deleteBook } from '../utils/API';\nimport Auth from\"../utils/auth\";import{removeBookId}from\"../utils/localStorage\";import{useQuery,useMutation}from\"@apollo/react-hooks\";import{REMOVE_BOOK}from\"../utils/mutations\";import{GET_ME}from\"../utils/queries\";var SavedBooks=function SavedBooks(){// const [userData, setUserData] = useState({});\nvar _useMutation=useMutation(REMOVE_BOOK),_useMutation2=_slicedToArray(_useMutation,2),removeBook=_useMutation2[0],error=_useMutation2[1].error;var _useQuery=useQuery(GET_ME),loading=_useQuery.loading,data=_useQuery.data;var userData=(data===null||data===void 0?void 0:data.me)||{};// create function that accepts the book's mongo _id value as param and deletes the book from the database\nvar handleDeleteBook=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(bookId){var token,_yield$removeBook,_data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:token=Auth.loggedIn()?Auth.getToken():null;if(token){_context.next=3;break;}return _context.abrupt(\"return\",false);case 3:_context.prev=3;_context.next=6;return removeBook({variables:{bookId:bookId}});case 6:_yield$removeBook=_context.sent;_data=_yield$removeBook.data;console.log(_data);if(!error){_context.next=11;break;}throw new Error(\"Something went wrong!\");case 11:// upon success, remove book's id from localStorage\nremoveBookId(bookId);_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](3);console.error(_context.t0);case 17:case\"end\":return _context.stop();}}},_callee,null,[[3,14]]);}));return function handleDeleteBook(_x){return _ref.apply(this,arguments);};}();// if data isn't here yet, say so\nif(loading){return/*#__PURE__*/React.createElement(\"h2\",null,\"LOADING...\");}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Jumbotron,{fluid:true,className:\"text-light bg-dark\"},/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(\"h1\",null,\"Viewing saved books!\"))),/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(\"h2\",null,userData.savedBooks.length?\"Viewing \".concat(userData.savedBooks.length,\" saved \").concat(userData.savedBooks.length===1?\"book\":\"books\",\":\"):\"You have no saved books!\"),/*#__PURE__*/React.createElement(CardColumns,null,userData.savedBooks.map(function(book){return/*#__PURE__*/React.createElement(Card,{key:book.bookId,border:\"dark\"},book.image?/*#__PURE__*/React.createElement(Card.Img,{src:book.image,alt:\"The cover for \".concat(book.title),variant:\"top\"}):null,/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,null,book.title),/*#__PURE__*/React.createElement(\"p\",{className:\"small\"},\"Authors: \",book.authors),/*#__PURE__*/React.createElement(Card.Text,null,book.description),/*#__PURE__*/React.createElement(Button,{className:\"btn-block btn-danger\",onClick:function onClick(){return handleDeleteBook(book.bookId);}},\"Delete this Book!\")));}))));};export default SavedBooks;","map":{"version":3,"sources":["/Users/dubem/Desktop/Book-Search-Engine/Develop/client/src/pages/SavedBooks.js"],"names":["React","useState","useEffect","Jumbotron","Container","CardColumns","Card","Button","Auth","removeBookId","useQuery","useMutation","REMOVE_BOOK","GET_ME","SavedBooks","removeBook","error","loading","data","userData","me","handleDeleteBook","bookId","token","loggedIn","getToken","variables","console","log","Error","savedBooks","length","map","book","image","title","authors","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\n\n// import { getMe, deleteBook } from '../utils/API';\nimport Auth from \"../utils/auth\";\nimport { removeBookId } from \"../utils/localStorage\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { REMOVE_BOOK } from \"../utils/mutations\";\nimport { GET_ME } from \"../utils/queries\";\n\nconst SavedBooks = () => {\n  // const [userData, setUserData] = useState({});\n  const [removeBook, { error }] = useMutation(REMOVE_BOOK);\n  const { loading, data } = useQuery(GET_ME);\n  const userData = data?.me || {};\n\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\n  const handleDeleteBook = async (bookId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const { data } = await removeBook({\n        variables: { bookId },\n      });\n\n      console.log(data);\n\n      if (error) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      // upon success, remove book's id from localStorage\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (loading) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <>\n      <Jumbotron fluid className=\"text-light bg-dark\">\n        <Container>\n          <h1>Viewing saved books!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {userData.savedBooks.length\n            ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? \"book\" : \"books\"\n            }:`\n            : \"You have no saved books!\"}\n        </h2>\n        <CardColumns>\n          {userData.savedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border=\"dark\">\n                {book.image ? (\n                  <Card.Img\n                    src={book.image}\n                    alt={`The cover for ${book.title}`}\n                    variant=\"top\"\n                  />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className=\"small\">Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  <Button\n                    className=\"btn-block btn-danger\"\n                    onClick={() => handleDeleteBook(book.bookId)}\n                  >\n                    Delete this Book!\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;"]},"metadata":{},"sourceType":"module"}